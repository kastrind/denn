import {Denn} from './Denn';
import { Activation } from './Activation';
import { DataSet } from './DataSet';

// Import dataset
let dataset =  DataSet.import("assets/mnist_train.csv", ',');

// Shuffle dataset
dataset = DataSet.shuffle(dataset);

// Separate input features from output variables and get a mapping of one-hot representation to the categorical values of the output
let onehot_to_labels = {};
let datasetXY = DataSet.separateXY(dataset, 0, true, onehot_to_labels);

// Normalize dataset
DataSet.normalize(datasetXY.X);

// Keep 20% of the dataset for testing and the rest 80% for training
let train_test = DataSet.separateTrainTest(datasetXY, 0.2);

let X = train_test.train.X;
let Y = train_test.train.Y_one_hot;

// This DNN will comprise one hidden layer of 42 neurons without drop-out probability
let formation = [{"neurons": 64, "dropout": 0}, {"neurons": 64, "dropout": 0}];
let learning_rate = 0.01;

// Instantiate DNN with a training set, architecture, learning rate and activation function of its hidden layer(s)
var nn = new Denn(X, Y, formation, learning_rate, Activation.relu);

// Train DNN
let epochs = 200, batch_size = 1, error_threshold = 0.003, verbose = true;

nn.train(epochs, batch_size, error_threshold, verbose);
nn.test(train_test.test.X, train_test.test.Y_one_hot, verbose);

console.log("Predictions:");
console.log("Actual: one, Predicted: " + nn.predict([[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,28,247,255,165,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,47,221,252,252,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,252,252,252,164,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,252,252,223,78,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,177,252,252,197,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,114,236,252,235,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,5,148,252,252,230,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,14,135,252,252,252,230,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,252,252,252,252,162,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,252,252,252,252,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,78,252,252,252,252,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,32,200,252,252,252,105,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,218,252,252,252,105,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,225,252,252,252,240,69,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,237,252,252,228,85,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,59,218,252,252,225,93,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,65,208,252,252,252,175,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,252,252,252,225,68,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,252,252,244,54,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,133,252,252,48,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]], onehot_to_labels));//one
console.log("Actual: two, Predicted: " + nn.predict([[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,110,150,253,170,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,94,237,253,252,252,252,218,175,21,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,37,181,252,252,253,252,252,252,253,252,92,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,84,252,252,252,252,253,252,252,252,253,252,236,62,0,0,0,0,0,0,0,0,0,0,0,0,0,0,181,252,252,252,252,252,253,252,252,252,253,252,252,252,0,0,0,0,0,0,0,0,0,0,0,0,32,115,242,252,252,252,252,252,222,179,190,252,253,252,252,252,0,0,0,0,0,0,0,0,0,0,0,0,109,252,252,252,252,252,246,132,41,0,37,252,253,252,252,252,0,0,0,0,0,0,0,0,0,0,0,0,109,252,252,252,252,210,92,0,0,0,37,252,253,252,252,252,0,0,0,0,0,0,0,0,0,0,0,0,0,125,222,253,144,20,0,0,0,0,37,253,255,253,253,108,0,0,0,0,0,0,0,0,0,0,0,0,0,0,25,35,0,0,0,0,0,0,161,252,253,252,241,77,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,73,232,252,253,252,112,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,237,252,252,253,252,71,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,16,109,255,253,253,253,255,119,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,21,181,252,253,252,252,252,159,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,27,37,99,201,252,252,253,252,252,252,222,57,32,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,221,252,252,252,252,252,253,252,252,252,253,252,236,144,0,0,0,0,0,0,0,0,0,0,0,0,47,233,253,253,253,253,253,253,255,253,253,253,255,253,253,253,255,253,253,108,0,0,0,0,0,0,0,0,78,200,252,252,252,252,252,252,253,252,252,252,253,252,252,252,253,252,252,108,0,0,0,0,0,0,0,0,0,21,180,252,252,231,252,252,217,215,215,215,232,252,252,252,253,252,226,92,0,0,0,0,0,0,0,0,0,0,16,108,108,46,108,108,0,0,0,0,47,108,211,252,253,128,31,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]], onehot_to_labels));//two
console.log("Actual: three, Predicted: " + nn.predict([[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,39,91,47,77,91,133,254,254,254,254,254,254,255,254,255,254,101,32,0,0,0,0,0,0,0,0,0,2,117,253,218,242,253,253,253,253,253,253,253,253,253,253,253,253,253,100,0,0,0,0,0,0,0,0,0,17,253,253,253,253,253,253,253,253,253,253,242,195,253,253,253,253,253,253,0,0,0,0,0,0,0,0,0,4,126,220,236,253,253,202,56,56,162,56,51,26,56,56,228,253,253,253,0,0,0,0,0,0,0,0,0,0,0,0,64,129,198,108,0,0,0,0,0,0,0,0,222,253,253,253,0,0,0,0,0,0,0,0,0,0,0,0,0,0,50,9,0,0,0,0,0,23,50,134,248,253,253,221,0,0,0,0,0,0,0,0,0,0,0,0,0,0,63,11,0,0,0,55,139,191,253,253,253,253,253,89,0,0,0,0,0,0,0,0,0,0,0,0,0,56,66,215,230,230,230,239,253,253,253,253,253,214,33,9,0,0,0,0,0,0,0,0,0,0,0,0,77,238,253,253,253,253,253,253,253,253,253,253,217,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,124,253,253,253,253,253,253,253,253,253,253,253,36,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,40,81,171,245,143,81,86,245,245,245,246,253,143,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,42,253,218,42,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,11,162,253,215,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,19,186,253,253,15,0,0,0,0,0,0,0,0,0,15,42,42,36,0,0,0,0,0,0,0,0,0,0,68,253,253,253,15,0,0,0,0,0,0,0,0,0,91,253,253,237,131,21,0,0,0,0,0,0,99,131,230,253,253,176,8,0,0,0,0,0,0,0,0,0,197,253,253,253,253,226,222,222,222,62,63,222,245,253,253,253,165,13,0,0,0,0,0,0,0,0,0,0,91,253,253,253,253,253,253,253,253,253,253,253,253,253,229,106,13,0,0,0,0,0,0,0,0,0,0,0,6,26,179,179,215,253,253,253,253,253,202,179,179,179,44,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,44,89,89,89,89,89,29,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]], onehot_to_labels));//three
